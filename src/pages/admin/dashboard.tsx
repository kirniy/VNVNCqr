import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { onAuthStateChanged } from 'firebase/auth';
import { auth, db } from '@/lib/firebase';
import AdminHeader from '@/components/AdminHeader';
import { collection, getDocs, query, where } from 'firebase/firestore';
import Head from 'next/head';

export default function Dashboard() {
  const router = useRouter();
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [loading, setLoading] = useState(true);
  const [stats, setStats] = useState({
    totalInvitations: 0,
    linkInvitations: 0,
    qrInvitations: 0,
    sentInvitations: 0,
    viewedInvitations: 0,
    redeemedInvitations: 0,
    expiredInvitations: 0,
    todayCreated: 0,
  });

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        setIsAuthenticated(true);
        loadStats();
      } else {
        router.push('/admin/login?redirect=/admin/dashboard');
      }
      setLoading(false);
    });

    return () => unsubscribe();
  }, [router]);

  const loadStats = async () => {
    try {
      const invitationsRef = collection(db, 'invitations');
      const snapshot = await getDocs(invitationsRef);
      
      let linkCount = 0;
      let qrCount = 0;
      let sentCount = 0;
      let viewedCount = 0;
      let redeemedCount = 0;
      let expiredCount = 0;
      let todayCount = 0;
      
      const today = new Date();
      today.setHours(0, 0, 0, 0);

      snapshot.forEach((doc) => {
        const data = doc.data();
        
        // Count by type
        if (data.invitationType === 'qr') {
          qrCount++;
        } else {
          linkCount++;
        }
        
        // Count by status
        if (data.status === 'sent') sentCount++;
        if (data.status === 'viewed') viewedCount++;
        if (data.status === 'redeemed') redeemedCount++;
        
        // Check if expired
        if (data.expiresAt) {
          const expiresAt = data.expiresAt.toDate();
          if (expiresAt < new Date()) {
            expiredCount++;
          }
        }
        
        // Check if created today
        if (data.createdAt) {
          const createdAt = data.createdAt.toDate();
          if (createdAt >= today) {
            todayCount++;
          }
        }
      });

      setStats({
        totalInvitations: snapshot.size,
        linkInvitations: linkCount,
        qrInvitations: qrCount,
        sentInvitations: sentCount,
        viewedInvitations: viewedCount,
        redeemedInvitations: redeemedCount,
        expiredInvitations: expiredCount,
        todayCreated: todayCount,
      });
    } catch (error) {
      console.error('Error loading stats:', error);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-black flex items-center justify-center">
        <div className="text-white text-xl loading-dots">–ó–∞–≥—Ä—É–∑–∫–∞</div>
      </div>
    );
  }

  if (!isAuthenticated) {
    return null;
  }

  return (
    <>
      <Head>
        <title>VNVNC - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</title>
      </Head>
      
      <div className="min-h-screen bg-vnvnc-black">
        <AdminHeader />
        
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-3xl font-bold text-white mb-8">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>

          {/* Event Info */}
          <div className="vnvnc-card mb-8">
            <h2 className="text-xl font-bold text-white mb-4">VNVNC Birthday Event</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <p className="text-gray-400 text-sm">–î–∞—Ç—ã —Å–æ–±—ã—Ç–∏—è</p>
                <p className="text-white text-2xl font-bold">29-30 –∞–≤–≥—É—Å—Ç–∞ 2025</p>
              </div>
              <div>
                <p className="text-gray-400 text-sm">–í—Ä–µ–º—è</p>
                <p className="text-white text-2xl font-bold">23:00 - 8:00</p>
              </div>
              <div>
                <p className="text-gray-400 text-sm">–ú–µ—Å—Ç–æ</p>
                <p className="text-white text-2xl font-bold">–ö–æ–Ω—é—à–µ–Ω–Ω–∞—è 2–í</p>
              </div>
            </div>
          </div>

          {/* Statistics */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            <div className="vnvnc-card">
              <p className="text-gray-400 text-sm mb-2">–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</p>
              <p className="text-white text-3xl font-bold">{stats.totalInvitations}</p>
              <div className="mt-2 text-sm">
                <span className="text-indigo-400">{stats.linkInvitations} —Å—Å—ã–ª–æ–∫</span>
                <span className="text-gray-400 mx-2">|</span>
                <span className="text-purple-400">{stats.qrInvitations} QR</span>
              </div>
            </div>

            <div className="vnvnc-card">
              <p className="text-gray-400 text-sm mb-2">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</p>
              <p className="text-blue-400 text-3xl font-bold">{stats.sentInvitations}</p>
              <p className="text-gray-400 text-sm mt-2">
                {stats.totalInvitations > 0 
                  ? `${Math.round((stats.sentInvitations / stats.totalInvitations) * 100)}% –æ—Ç –≤—Å–µ—Ö`
                  : '0%'}
              </p>
            </div>

            <div className="vnvnc-card">
              <p className="text-gray-400 text-sm mb-2">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</p>
              <p className="text-yellow-400 text-3xl font-bold">{stats.viewedInvitations}</p>
              <p className="text-gray-400 text-sm mt-2">
                {stats.sentInvitations > 0 
                  ? `${Math.round((stats.viewedInvitations / stats.sentInvitations) * 100)}% –æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö`
                  : '0%'}
              </p>
            </div>

            <div className="vnvnc-card">
              <p className="text-gray-400 text-sm mb-2">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ</p>
              <p className="text-green-400 text-3xl font-bold">{stats.redeemedInvitations}</p>
              <p className="text-gray-400 text-sm mt-2">
                {stats.totalInvitations > 0 
                  ? `${Math.round((stats.redeemedInvitations / stats.totalInvitations) * 100)}% –æ—Ç –≤—Å–µ—Ö`
                  : '0%'}
              </p>
            </div>
          </div>

          {/* Quick Actions */}
          <div className="vnvnc-card">
            <h2 className="text-xl font-bold text-white mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <button
                onClick={() => router.push('/admin/invitations')}
                className="p-4 bg-vnvnc-darkgray hover:bg-vnvnc-gray border border-vnvnc-red/30 rounded text-white transition-all"
              >
                <div className="text-2xl mb-2">üì®</div>
                <div className="font-bold">–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</div>
                <div className="text-sm text-gray-400 mt-1">HTML —Å—Å—ã–ª–∫–∏ –∏–ª–∏ QR –∫–æ–¥—ã</div>
              </button>

              <button
                onClick={() => router.push('/admin/invitations')}
                className="p-4 bg-vnvnc-darkgray hover:bg-vnvnc-gray border border-vnvnc-red/30 rounded text-white transition-all"
              >
                <div className="text-2xl mb-2">üìã</div>
                <div className="font-bold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏</div>
                <div className="text-sm text-gray-400 mt-1">–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</div>
              </button>

              <button
                onClick={() => router.push('/admin/logs')}
                className="p-4 bg-vnvnc-darkgray hover:bg-vnvnc-gray border border-vnvnc-red/30 rounded text-white transition-all"
              >
                <div className="text-2xl mb-2">üìä</div>
                <div className="font-bold">–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤</div>
                <div className="text-sm text-gray-400 mt-1">–ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</div>
              </button>
            </div>
          </div>

          {/* Today's Activity */}
          <div className="vnvnc-card mt-8">
            <h2 className="text-xl font-bold text-white mb-4">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p className="text-gray-400 text-sm">–°–æ–∑–¥–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è</p>
                <p className="text-white text-2xl font-bold">{stats.todayCreated}</p>
              </div>
              <div>
                <p className="text-gray-400 text-sm">–ò—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</p>
                <p className="text-red-400 text-2xl font-bold">{stats.expiredInvitations}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}